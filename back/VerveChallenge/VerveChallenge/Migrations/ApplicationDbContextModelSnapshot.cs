// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VerveChallenge.Data;

namespace VerveChallenge.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("VerveChallenge.Data.Banner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("VerveChallenge.Data.BannerCampaign", b =>
                {
                    b.Property<long>("BannerId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CampaignId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BannerId", "CampaignId");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignBanners");
                });

            modelBuilder.Entity("VerveChallenge.Data.Campaign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveHoursString")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("VerveChallenge.Data.BannerCampaign", b =>
                {
                    b.HasOne("VerveChallenge.Data.Banner", "Banner")
                        .WithMany("Campaigns")
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VerveChallenge.Data.Campaign", "Campaign")
                        .WithMany("Banners")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("VerveChallenge.Data.Banner", b =>
                {
                    b.Navigation("Campaigns");
                });

            modelBuilder.Entity("VerveChallenge.Data.Campaign", b =>
                {
                    b.Navigation("Banners");
                });
#pragma warning restore 612, 618
        }
    }
}
